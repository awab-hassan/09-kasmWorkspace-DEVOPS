apiVersion: v1
kind: PersistentVolume
metadata:
  name: kasm-pv
spec:
  capacity:
    storage: 10Gi  # Adjust the storage size as needed
  volumeMode: Filesystem  # Use "Filesystem" for block storage, "Block" for raw block devices
  accessModes:
    - ReadWriteMany # Adjust access modes as needed (e.g., ReadWriteMany for multiple pods)
  persistentVolumeReclaimPolicy: Retain  # Specify the desired reclaim policy
  storageClassName: ""  # No storage class is specified for a hostPath volume
  hostPath:
    path: "/opt" 

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kasm-pvc
spec:
  accessModes:
    - ReadWriteMany  # Use the appropriate access mode
  storageClassName: ""  # Use the appropriate StorageClass
  resources:
    requests:
      storage: 1Gi  # Adjust the storage capacity to match the PV
  volumeName: kasm-pv
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kasm-app-statefulset
spec:
  serviceName: kasm-app-service
  replicas: 1  # You can adjust the number of replicas as needed.
  selector:
    matchLabels:
      app: kasm-app
  template:
    metadata:
      labels:
        app: kasm-app
    spec:
      containers:
      - name: kasm-app
        image: kasmdocker/kasm-public:public
        imagePullPolicy: Always
        env:
        - name: KASM_PORT
          value: "4443"
        - name: DOCKER_HUB_USERNAME
          value: "USER"
        - name: DOCKER_HUB_PASSWORD
          value: "PASS"
        - name: DOCKER_MTU
          value: "1500"
        ports:
        - containerPort: 3000
        - containerPort: 4443
        volumeMounts:
        - name: kasm-data
          mountPath: /opt
          subPath: kasm-opt-data
        securityContext:
          runAsUser: 0
          privileged: true
      volumes:
        - name: kasm-data
          persistentVolumeClaim:
            claimName: kasm-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kasm-app-service
spec:
  selector:
    app: kasm-app
  ports:
  - name: http
    port: 80
    targetPort: 3000
    nodePort: 31003
  - name: https
    port: 4443
    targetPort: 4443
    nodePort: 31004
  type: NodePort